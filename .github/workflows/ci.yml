name: Java CI with Maven and Code Coverage

# Disparadores: Se ejecuta en cada push y pull request a la rama main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # La máquina virtual donde se ejecutará el trabajo
    runs-on: ubuntu-latest

    steps:
      # Step 1: Download the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure the Java 17 environment (defined in your pom.xml)
      # Use cache to speed up dependency downloads in future builds
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Step 3: Run tests with Maven
      # The 'mvn verify' command runs the build lifecycle up to the verify phase,
      # which includes compiling the code and running tests.
      # JaCoCo will automatically hook into this process to generate the coverage report.
      - name: Build with Maven and generate coverage report
        run: mvn -B verify

      # Step 4: Upload coverage report to Codecov
      # This is a third-party service that provides detailed code coverage analysis.
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          # The token is securely stored in your repository's "Secrets"
          token: ${{ secrets.CODECOV_TOKEN }}